{"ast":null,"code":"var _jsxFileName = \"/home/anton/code/projects/tmp/net-tools-clietnt-ts/_demo/src/components/CpeForm/CpeForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Form, Input, Button, Tooltip, Select, message } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport styles from \"./CpeForm.module.css\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst CpeForm = props => {\n  _s();\n\n  const [disabled, setDisabled] = useState(true);\n  const {\n    getCpeData,\n    setCpeData,\n    isLoading,\n    setIsLoading\n  } = props;\n\n  const onFinish = values => {\n    console.log(\"Success:\", values);\n    setDisabled(false);\n    getCpeData(values._idType);\n  };\n\n  const onFinishFailed = errorInfo => {\n    message.warning(\"Не верно заполнены данные!\");\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"styles.formWrapper\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      layout: \"vertical\",\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"CPE identifier\",\n        children: /*#__PURE__*/_jsxDEV(Input.Group, {\n          compact: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: [\"_idType\", \"_type\"],\n            noStyle: true,\n            rules: [{\n              required: true,\n              message: \"Выберите SN или MAC\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"select\",\n              size: \"middle\",\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"serialNumber\",\n                children: \"S/N\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"macAddress\",\n                disabled: true,\n                children: \"MAC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: [\"_idType\", \"_value\"],\n            noStyle: true,\n            rules: [{\n              min: 10,\n              message: \"Минимальное количество символов: 10\"\n            }, {\n              max: 30,\n              message: \"МАксимальное количество символов: 30\"\n            }, {\n              required: true,\n              message: \"Заполните это поле\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              allowClear: true,\n              style: {\n                width: \"50%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            disabled: false,\n            children: \"\\u041D\\u0430\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CpeForm, \"+yaEkVZgVYFnFEzs+LrEIPZoDhI=\");\n\n_c = CpeForm;\nexport default CpeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CpeForm\");","map":{"version":3,"sources":["/home/anton/code/projects/tmp/net-tools-clietnt-ts/_demo/src/components/CpeForm/CpeForm.jsx"],"names":["useState","Form","Input","Button","Tooltip","Select","message","styles","InfoCircleOutlined","Option","CpeForm","props","disabled","setDisabled","getCpeData","setCpeData","isLoading","setIsLoading","onFinish","values","console","log","_idType","onFinishFailed","errorInfo","warning","span","remember","required","min","max","width"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Form, Input, Button, Tooltip, Select, message } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport styles from \"./CpeForm.module.css\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nconst CpeForm = (props) => {\n  const [disabled, setDisabled] = useState(true);\n  const { getCpeData, setCpeData, isLoading, setIsLoading } = props;\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n    setDisabled(false);\n    getCpeData(values._idType);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    message.warning(\"Не верно заполнены данные!\");\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div className={\"styles.formWrapper\"}>\n      <Form\n        layout=\"vertical\"\n        name=\"basic\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <Form.Item label=\"CPE identifier\">\n          <Input.Group compact>\n            <Form.Item\n              name={[\"_idType\", \"_type\"]}\n              noStyle\n              rules={[{ required: true, message: \"Выберите SN или MAC\" }]}\n            >\n              <Select placeholder=\"select\" size=\"middle\" >\n                <Option value=\"serialNumber\">S/N</Option>\n                <Option value=\"macAddress\" disabled>\n                  MAC\n                </Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name={[\"_idType\", \"_value\"]}\n              noStyle\n              rules={[\n                {\n                  min: 10,\n                  message: \"Минимальное количество символов: 10\",\n                },\n                {\n                  max: 30,\n                  message: \"МАксимальное количество символов: 30\",\n                },\n                { required: true, message: \"Заполните это поле\" },\n              ]}\n            >\n              <Input allowClear style={{ width: \"50%\" }} />\n            </Form.Item>\n\n            <Button type=\"primary\" htmlType=\"submit\" disabled={false}>\n              Найти\n            </Button>\n          </Input.Group>\n        </Form.Item>\n\n        {/* <Form.Item\n          label=\"Manufacturer\"\n          name=\"manufacturer\"\n          rules={[\n            {\n              required: true,\n              message: \"Please select your cpe manufacturer!\",\n            },\n          ]}\n        >\n          <Select\n            placeholder=\"Select a manufacturer\"\n            //   onChange={onGenderChange}\n            allowClear\n          >\n            <Option value=\"QTECH\">QTECH</Option>\n            <Option value=\"Tp-Link\">Tp-Link</Option>\n            <Option value=\"SNR\">SNR</Option>\n          </Select>\n        </Form.Item> */}\n\n        {/* <Form.Item\n          wrapperCol={{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\" disabled={disabled}>\n            Найти\n          </Button>\n        </Form.Item> */}\n      </Form>\n    </div>\n  );\n};\n\nexport default CpeForm;\n"]},"metadata":{},"sourceType":"module"}